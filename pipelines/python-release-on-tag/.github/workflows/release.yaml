#
# NOTICE: This file is synchronized on-demand by synchronize.yaml job from a shared library directory
#
# CUSTOMIZATION: Please edit .github/helpers/ci-vars.env to modify values that are injected
#

name: release
on:
    push:
        tags:
            - '*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: "{{IMAGE_NAME}}"

jobs:
    prepare-environment:
        runs-on: ubuntu-20.04
        outputs:
            IMAGE_NAME: ${{ image-name-discovery.outputs.IMAGE_NAME }}
        steps:
            #
            # Discover docker image name
            #   1. IF secret IMAGE_NAME is defined, it will be taken
            #   2. Else org-name/repository would be used
            #
            - id: image-name-discovery
              run: |
                  if [[ "${{ secrets.IMAGE_NAME }}" != "" ]]; then
                      echo "::set-output name=IMAGE_NAME::${{ secrets.IMAGE_NAME }}"
                  else
                      echo "::set-output name=IMAGE_NAME::${{github.repository}}"
                  fi

    release:
        runs-on: ubuntu-20.04
        needs: [prepare-environment]
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Prepare OS
              run: sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev

            - name: Prepare Python
              uses: actions/setup-python@v2
              with:
                  python-version: "{{PYTHON_VERSION}}"
                  architecture: "x64"

            - name: Prepare Pipenv
              run: "python -m pip install --upgrade pipenv wheel"

            - name: Log in to the Container registry
              uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
              with:
                  images: ${{ env.REGISTRY }}/${{ needs.prepare-environment.outputs.IMAGE_NAME }}

            - name: Build and release to container registry
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: ${{ startsWith(github.ref, 'refs/tags/') }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Prepare distribution
              run: "./setup.py sdist"

            - name: Publish a Python distribution to PyPI
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  user: __token__
                  password: ${{ secrets.PYPI_GENERIC_TOKEN }}
